# Application Configuration
app.name=${APP_NAME:LocalNews}
app.version=${APP_VERSION:1.0.0}

# Server Configuration
server.port=${PORT:8080}
server.servlet.context-path=${CONTEXT_PATH:/}

# Database Configuration - AWS RDS PostgreSQL
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/localvocal}
spring.datasource.username=${DATABASE_USERNAME:postgres}
spring.datasource.password=${DATABASE_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Configuration for AWS
spring.datasource.hikari.maximum-pool-size=${DB_POOL_SIZE:20}
spring.datasource.hikari.minimum-idle=${DB_MIN_IDLE:5}
spring.datasource.hikari.connection-timeout=${DB_CONNECTION_TIMEOUT:20000}
spring.datasource.hikari.idle-timeout=${DB_IDLE_TIMEOUT:300000}
spring.datasource.hikari.max-lifetime=${DB_MAX_LIFETIME:1200000}

# JPA Configuration
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:update}
spring.jpa.show-sql=${JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=${JPA_FORMAT_SQL:false}
spring.jpa.properties.hibernate.jdbc.batch_size=${JPA_BATCH_SIZE:20}
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# JWT Configuration
jwt.secret=${JWT_SECRET:mySecretKeyForJWTTokenGenerationAndValidation1234567890}
jwt.expiration=${JWT_EXPIRATION:36000000}

# File Upload Configuration
spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE:100MB}
spring.servlet.multipart.max-request-size=${MAX_REQUEST_SIZE:100MB}
spring.servlet.multipart.enabled=true

# Upload Directory Configuration
upload.dir=${UPLOAD_DIR:uploads}
upload.allowed-types=${UPLOAD_ALLOWED_TYPES:image/jpeg,image/png,image/gif,video/mp4,video/avi,video/mov,video/webm}
upload.max-files=${UPLOAD_MAX_FILES:10}

# Logging Configuration
logging.level.root=${LOG_LEVEL_ROOT:INFO}
logging.level.com.localnews=${LOG_LEVEL_APP:DEBUG}
logging.level.org.springframework.security=${LOG_LEVEL_SECURITY:INFO}
logging.pattern.console=${LOG_PATTERN:%d{yyyy-MM-dd HH:mm:ss} - %msg%n}

# AWS Configuration
aws.region=${AWS_REGION:us-east-1}
aws.s3.bucket=${S3_BUCKET_NAME:}
aws.s3.enabled=${S3_ENABLED:false}

# Health Check Configuration
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=${HEALTH_SHOW_DETAILS:when_authorized}
management.health.db.enabled=true

# CORS Configuration
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080}
cors.allowed-methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
cors.allowed-headers=${CORS_ALLOWED_HEADERS:*}

# Security Configuration
security.require-ssl=${REQUIRE_SSL:false}
security.session-timeout=${SESSION_TIMEOUT:1800}

# Email Configuration (if needed)
spring.mail.host=${MAIL_HOST:}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:}
spring.mail.password=${MAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=${MAIL_SMTP_AUTH:true}
spring.mail.properties.mail.smtp.starttls.enable=${MAIL_SMTP_STARTTLS:true}

# SMS Configuration for OTP
sms.provider.enabled=${SMS_ENABLED:false}
sms.provider.api.key=${SMS_API_KEY:}
sms.provider.sender.id=${SMS_SENDER_ID:LOCALNEWS}

# Video Platform Configuration
video.max.duration=${VIDEO_MAX_DURATION:600}
video.allowed.formats=${VIDEO_ALLOWED_FORMATS:mp4,avi,mov}
video.retention.days=${VIDEO_RETENTION_DAYS:180}

# Push Notification Configuration (Firebase FCM)
fcm.server.key=${FCM_SERVER_KEY:}
fcm.enabled=${FCM_ENABLED:false}

# Application Environment - This should be set via environment variable or command line
# spring.profiles.active=${SPRING_PROFILES_ACTIVE:production}
